---
title: "Mlflow"
lang: en 
subtitle: "Deploy Models"
author: Jan Kirenz
execute:
  eval: false
  echo: true
highlight-style: github
format:
  revealjs: 
    toc: true
    toc-depth: 1
    embed-resources: false
    theme: [dark, custom.scss]  
    incremental: false
    transition: slide
    transition-speed: slow
    background-transition: fade
    code-copy: true
    code-line-numbers: true
    smaller: false
    scrollable: true
    slide-number: c
    preview-links: auto
    chalkboard: 
      buttons: false
   #logo: images/logo.png
   #footer: Setup | Jan Kirenz
---



# Python setup

```{python}

import numpy as np
import mlflow.pyfunc
import mlflow

from pathlib import Path

from sklearn.ensemble import RandomForestRegressor
from sklearn.datasets import load_diabetes
from sklearn.model_selection import train_test_split

```


# Basics

## Deploy the registered model

-After registering the model, you can deploy it to various production environments for serving predictions. 

- MLflow supports multiple deployment options, such as  
  - local deployment
  - deployment to cloud platforms like Microsoft Azure ML, Amazon SageMaker
  - using custom deployment solutions.

# Local deployment


- Run the script `deploy_local.py`


```{python}

"""
Local deployment

"""

import numpy as np
import mlflow.pyfunc

# Load the registered model
MODEL_NAME = "IrisClassifier"
MODEL_VERSION = 3  # Replace with the desired version number

loaded_model = mlflow.pyfunc.load_model(
    model_uri=f"models:/{MODEL_NAME}/{MODEL_VERSION}")

# Use the model for prediction

# Example input for an Iris flower
sample_input = np.array([[5.1, 3.5, 1.4, 0.2]])
prediction = loaded_model.predict(sample_input)
print("Prediction:", prediction)


```




